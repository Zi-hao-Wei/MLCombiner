[
    {
        "name": "define internal i32 @gomp_loop_ordered_static_start(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5) #0 {",
        "unoptimized": "\n  %7 = alloca i64, align 8\n  %8 = alloca i64, align 8\n  %9 = alloca i64, align 8\n  %10 = alloca i64, align 8\n  %11 = alloca ptr, align 8\n  %12 = alloca ptr, align 8\n  %13 = alloca ptr, align 8\n  store i64 %0, ptr %7, align 8\n  store i64 %1, ptr %8, align 8\n  store i64 %2, ptr %9, align 8\n  store i64 %3, ptr %10, align 8\n  store ptr %4, ptr %11, align 8\n  store ptr %5, ptr %12, align 8\n  %14 = call ptr (...) @gomp_thread()\n  store ptr %14, ptr %13, align 8\n  %15 = call i64 @gomp_work_share_start(i32 noundef 1)\n  %16 = icmp ne i64 %15, 0\n  br i1 %16, label %17, label %29\n\n17:                                               ; preds = %6\n  %18 = load ptr, ptr %13, align 8\n  %19 = getelementptr inbounds %struct.gomp_thread, ptr %18, i32 0, i32 0\n  %20 = getelementptr inbounds %struct.TYPE_3__, ptr %19, i32 0, i32 0\n  %21 = load ptr, ptr %20, align 8\n  %22 = load i64, ptr %7, align 8\n  %23 = load i64, ptr %8, align 8\n  %24 = load i64, ptr %9, align 8\n  %25 = load i32, ptr @GFS_STATIC, align 4\n  %26 = load i64, ptr %10, align 8\n  %27 = call i32 @gomp_loop_init(ptr noundef %21, i64 noundef %22, i64 noundef %23, i64 noundef %24, i32 noundef %25, i64 noundef %26)\n  %28 = call i32 (...) @gomp_ordered_static_init()\n  br label %29\n\n29:                                               ; preds = %17, %6\n  %30 = load ptr, ptr %13, align 8\n  %31 = getelementptr inbounds %struct.gomp_thread, ptr %30, i32 0, i32 0\n  %32 = getelementptr inbounds %struct.TYPE_3__, ptr %31, i32 0, i32 0\n  %33 = load ptr, ptr %32, align 8\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %33, i32 0, i32 0\n  %35 = call i32 @gomp_mutex_unlock(ptr noundef %34)\n  %36 = load ptr, ptr %11, align 8\n  %37 = load ptr, ptr %12, align 8\n  %38 = call i32 @gomp_iter_static_next(ptr noundef %36, ptr noundef %37)\n  %39 = icmp ne i32 %38, 0\n  %40 = xor i1 %39, true\n  %41 = zext i1 %40 to i32\n  ret i32 %41\n}",
        "optimized": "\n  %7 = tail call ptr (...) @gomp_thread() #2\n  %8 = tail call i64 @gomp_work_share_start(i32 noundef 1) #2\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %15, label %10\n\n10:                                               ; preds = %6\n  %11 = load ptr, ptr %7, align 8, !tbaa !5\n  %12 = load i32, ptr @GFS_STATIC, align 4, !tbaa !11\n  %13 = tail call i32 @gomp_loop_init(ptr noundef %11, i64 noundef %0, i64 noundef %1, i64 noundef %2, i32 noundef %12, i64 noundef %3) #2\n  %14 = tail call i32 (...) @gomp_ordered_static_init() #2\n  br label %15\n\n15:                                               ; preds = %10, %6\n  %16 = load ptr, ptr %7, align 8, !tbaa !5\n  %17 = tail call i32 @gomp_mutex_unlock(ptr noundef %16) #2\n  %18 = tail call i32 @gomp_iter_static_next(ptr noundef %4, ptr noundef %5) #2\n  %19 = icmp eq i32 %18, 0\n  %20 = zext i1 %19 to i32\n  ret i32 %20\n}",
        "unopt-encode": [
            "I1: ALLOCA i64 ALIGN 8",
            "I2: ALLOCA i64 ALIGN 8",
            "I3: ALLOCA i64 ALIGN 8",
            "I4: ALLOCA i64 ALIGN 8",
            "I5: ALLOCA PTR ALIGN 8",
            "I6: ALLOCA PTR ALIGN 8",
            "I7: ALLOCA PTR ALIGN 8",
            "I8: STORE i64 %0 PTR (I1) ALIGN 8",
            "I9: STORE i64 %1 PTR (I2) ALIGN 8",
            "I10: STORE i64 %2 PTR (I3) ALIGN 8",
            "I11: STORE i64 %3 PTR (I4) ALIGN 8",
            "I12: STORE PTR %4 PTR (I5) ALIGN 8",
            "I13: STORE PTR %5 PTR (I6) ALIGN 8",
            "I14: CALL PTR (...) @GOMP_THREAD()",
            "I15: STORE PTR (I14) PTR (I7) ALIGN 8",
            "I16: CALL i64 @GOMP_WORK_SHARE_START(i32 NOUNDEF 1)",
            "I17: ICMP NE i64 (I16) 0",
            "I18: BR I1 (I17) LABEL %17 LABEL %29",
            "I19: %6",
            "I20: LOAD PTR PTR (I7) ALIGN 8",
            "I21: GETELEMENTPTR INBOUNDS %STRUCT.GOMP_THREAD PTR (I20) i32 0 i32 0",
            "I22: GETELEMENTPTR INBOUNDS %STRUCT.TYPE_3__ PTR (I21) i32 0 i32 0",
            "I23: LOAD PTR PTR (I22) ALIGN 8",
            "I24: LOAD i64 PTR (I1) ALIGN 8",
            "I25: LOAD i64 PTR (I2) ALIGN 8",
            "I26: LOAD i64 PTR (I3) ALIGN 8",
            "I27: LOAD i32 PTR @GFS_STATIC ALIGN 4",
            "I28: LOAD i64 PTR (I4) ALIGN 8",
            "I29: CALL i32 @GOMP_LOOP_INIT(PTR NOUNDEF (I23) i64 NOUNDEF (I24) i64 NOUNDEF (I25) i64 NOUNDEF (I26) i32 NOUNDEF (I27) i64 NOUNDEF (I28))",
            "I30: CALL i32 (...) @GOMP_ORDERED_STATIC_INIT()",
            "I31: BR LABEL %29",
            "I32: %17 %6",
            "I33: LOAD PTR PTR (I7) ALIGN 8",
            "I34: GETELEMENTPTR INBOUNDS %STRUCT.GOMP_THREAD PTR (I33) i32 0 i32 0",
            "I35: GETELEMENTPTR INBOUNDS %STRUCT.TYPE_3__ PTR (I34) i32 0 i32 0",
            "I36: LOAD PTR PTR (I35) ALIGN 8",
            "I37: GETELEMENTPTR INBOUNDS %STRUCT.TYPE_4__ PTR (I36) i32 0 i32 0",
            "I38: CALL i32 @GOMP_MUTEX_UNLOCK(PTR NOUNDEF (I37))",
            "I39: LOAD PTR PTR (I5) ALIGN 8",
            "I40: LOAD PTR PTR (I6) ALIGN 8",
            "I41: CALL i32 @GOMP_ITER_STATIC_NEXT(PTR NOUNDEF (I39) PTR NOUNDEF (I40))",
            "I42: ICMP NE i32 (I41) 0",
            "I43: XOR I1 (I42) TRUE",
            "I44: ZEXT I1 (I43) TO i32",
            "I45: RET i32 (I44)"
        ],
        "opt-encode": [
            "I1: TAIL CALL PTR (...) @GOMP_THREAD() #2",
            "I2: TAIL CALL i64 @GOMP_WORK_SHARE_START(i32 NOUNDEF 1) #2",
            "I3: ICMP EQ i64 (I2) 0",
            "I4: BR I1 (I3) LABEL (I16) LABEL (I4)",
            "I5: %6",
            "I6: LOAD PTR PTR (I1) ALIGN 8 !TBAA !5",
            "I7: LOAD i32 PTR @GFS_STATIC ALIGN 4 !TBAA !11",
            "I8: TAIL CALL i32 @GOMP_LOOP_INIT(PTR NOUNDEF (I6) i64 NOUNDEF %0 i64 NOUNDEF %1 i64 NOUNDEF %2 i32 NOUNDEF (I7) i64 NOUNDEF %3) #2",
            "I9: TAIL CALL i32 (...) @GOMP_ORDERED_STATIC_INIT() #2",
            "I10: BR LABEL (I16)",
            "I11: (I4) %6",
            "I12: LOAD PTR PTR (I1) ALIGN 8 !TBAA !5",
            "I13: TAIL CALL i32 @GOMP_MUTEX_UNLOCK(PTR NOUNDEF (I12)) #2",
            "I14: TAIL CALL i32 @GOMP_ITER_STATIC_NEXT(PTR NOUNDEF %4 PTR NOUNDEF %5) #2",
            "I15: ICMP EQ i32 (I14) 0",
            "I16: ZEXT I1 (I15) TO i32",
            "I17: RET i32 (I16)"
        ]
    }
]