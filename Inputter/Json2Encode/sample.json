[
    {
        "name": "define internal i32 @gomp_loop_ordered_static_start(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3, ptr noundef %4, ptr noundef %5) #0 {",
        "unoptimized": "\n  %7 = alloca i64, align 8\n  %8 = alloca i64, align 8\n  %9 = alloca i64, align 8\n  %10 = alloca i64, align 8\n  %11 = alloca ptr, align 8\n  %12 = alloca ptr, align 8\n  %13 = alloca ptr, align 8\n  store i64 %0, ptr %7, align 8\n  store i64 %1, ptr %8, align 8\n  store i64 %2, ptr %9, align 8\n  store i64 %3, ptr %10, align 8\n  store ptr %4, ptr %11, align 8\n  store ptr %5, ptr %12, align 8\n  %14 = call ptr (...) @gomp_thread()\n  store ptr %14, ptr %13, align 8\n  %15 = call i64 @gomp_work_share_start(i32 noundef 1)\n  %16 = icmp ne i64 %15, 0\n  br i1 %16, label %17, label %29\n\n17:                                               ; preds = %6\n  %18 = load ptr, ptr %13, align 8\n  %19 = getelementptr inbounds %struct.gomp_thread, ptr %18, i32 0, i32 0\n  %20 = getelementptr inbounds %struct.TYPE_3__, ptr %19, i32 0, i32 0\n  %21 = load ptr, ptr %20, align 8\n  %22 = load i64, ptr %7, align 8\n  %23 = load i64, ptr %8, align 8\n  %24 = load i64, ptr %9, align 8\n  %25 = load i32, ptr @GFS_STATIC, align 4\n  %26 = load i64, ptr %10, align 8\n  %27 = call i32 @gomp_loop_init(ptr noundef %21, i64 noundef %22, i64 noundef %23, i64 noundef %24, i32 noundef %25, i64 noundef %26)\n  %28 = call i32 (...) @gomp_ordered_static_init()\n  br label %29\n\n29:                                               ; preds = %17, %6\n  %30 = load ptr, ptr %13, align 8\n  %31 = getelementptr inbounds %struct.gomp_thread, ptr %30, i32 0, i32 0\n  %32 = getelementptr inbounds %struct.TYPE_3__, ptr %31, i32 0, i32 0\n  %33 = load ptr, ptr %32, align 8\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %33, i32 0, i32 0\n  %35 = call i32 @gomp_mutex_unlock(ptr noundef %34)\n  %36 = load ptr, ptr %11, align 8\n  %37 = load ptr, ptr %12, align 8\n  %38 = call i32 @gomp_iter_static_next(ptr noundef %36, ptr noundef %37)\n  %39 = icmp ne i32 %38, 0\n  %40 = xor i1 %39, true\n  %41 = zext i1 %40 to i32\n  ret i32 %41\n}",
        "optimized": "\n  %7 = tail call ptr (...) @gomp_thread() #2\n  %8 = tail call i64 @gomp_work_share_start(i32 noundef 1) #2\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %15, label %10\n\n10:                                               ; preds = %6\n  %11 = load ptr, ptr %7, align 8, !tbaa !5\n  %12 = load i32, ptr @GFS_STATIC, align 4, !tbaa !11\n  %13 = tail call i32 @gomp_loop_init(ptr noundef %11, i64 noundef %0, i64 noundef %1, i64 noundef %2, i32 noundef %12, i64 noundef %3) #2\n  %14 = tail call i32 (...) @gomp_ordered_static_init() #2\n  br label %15\n\n15:                                               ; preds = %10, %6\n  %16 = load ptr, ptr %7, align 8, !tbaa !5\n  %17 = tail call i32 @gomp_mutex_unlock(ptr noundef %16) #2\n  %18 = tail call i32 @gomp_iter_static_next(ptr noundef %4, ptr noundef %5) #2\n  %19 = icmp eq i32 %18, 0\n  %20 = zext i1 %19 to i32\n  ret i32 %20\n}"
    }
]